import Config

# Enable MCP servers
config :vsm_phoenix, :disable_mcp_servers, false

# Disable MAGG to prevent startup crashes (MCP still works without it)
config :vsm_phoenix, :disable_magg, true

# Configure your database
config :vsm_phoenix, VsmPhoenix.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "vsm_phoenix_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :vsm_phoenix, VsmPhoenixWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "VSM_PHOENIX_SECRET_KEY_BASE_DEV_VERY_LONG_STRING_FOR_SECURITY_WITH_64_BYTES_MIN_REQUIREMENT_HERE",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :vsm_phoenix, VsmPhoenixWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/vsm_phoenix_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :vsm_phoenix, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# VSM Development Configuration
config :vsm_phoenix, :vsm,
  # More verbose logging in development
  debug_mode: true,
  
  # Faster intervals for development
  queen: [
    policy_check_interval: 10_000,  # 10 seconds
    viability_threshold: 0.6,
    intervention_threshold: 0.5
  ],
  
  intelligence: [
    scan_interval: 30_000,  # 30 seconds
    tidewave_enabled: true,
    adaptation_timeout: 60_000,  # 1 minute
    learning_rate: 0.2
  ],
  
  control: [
    optimization_interval: 15_000,  # 15 seconds
    resource_thresholds: %{
      compute: 0.9,
      memory: 0.9,
      network: 0.8,
      storage: 0.95
    }
  ],
  
  coordinator: [
    sync_check_interval: 5_000,  # 5 seconds
    oscillation_detection_window: 3_000,  # 3 seconds
    max_message_frequency: 200  # per second
  ],
  
  operations: [
    health_check_interval: 15_000,  # 15 seconds
    max_processing_time: 2_000,  # 2 seconds for debug
    customer_response_target: 1_000  # 1 second for debug
  ]

# Disable Quantum in development to avoid interference
config :vsm_phoenix, VsmPhoenix.Scheduler,
  jobs: []

# Import local config if it exists
if File.exists?("config/dev.local.exs") do
  import_config "dev.local.exs"
end